name: Build & Deploy Docs

on:
  push:
    branches: 
    - master
    - docs-ci
  pull_request:
    paths: 
    - 'docs/**'

env:
  NETLIFY_SITE_ID: "8d48f1ea-d40f-4669-8f10-421293e3f6e5"
  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
  OUT_DIR: build/devspace

jobs:
  build:

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js
      uses: actions/setup-node@v1
    - name: Build latest version of docs
      run: |
        cp versions.json versions.all.json
        LATEST_VERSION=$(node -e "var versions = require('./versions.all.json'); console.log(versions[0])")
        LATEST_SIDEBAR_VERSION=$(node -e "const fs = require('fs'); var versions = require('./versions.json'); for (var i = 0; i < versions.length; i++) { if (fs.existsSync('./versioned_sidebars/version-'+versions[i]+'-sidebars.json')) {console.log(versions[i]); break; } }")

        echo "[\"$LATEST_VERSION\"]" > versions.json
        cp ./versioned_sidebars/version-${LATEST_SIDEBAR_VERSION}-sidebars.json ./versioned_sidebars/version-${LATEST_VERSION}-sidebars.json
        sed -i "s~$LATEST_SIDEBAR_VERSION~$LATEST_VERSION~" ./versioned_sidebars/version-${LATEST_VERSION}-sidebars.json
        
        npm ci
        npm run build
      working-directory: ./docs/website
      env:
        NPM_CONFIG_GLOBALCONFIG: "dist/npm/etc/npmrc"
        NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
    - name: Deploy preview site on netlify
      run: |
        npm install -g netlify-cli
        netlify deploy --auth=$NETLIFY_AUTH_TOKEN --site=$NETLIFY_SITE_ID --dir=build/devspace
      working-directory: ./docs/website
    - name: Merge docs pages of previous versions with current version
      run: |
        echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
        curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
        sudo apt-get update && sudo apt-get install -y google-cloud-sdk

        echo $GCLOUD_DOCS_SERVICE_ACCOUNT >gcloud-sa.json
        gcloud auth activate-service-account --key-file=gcloud-sa.json
        gcloud config set project $GCLOUD_PROJECT

        mv $OUT_DIR ${OUT_DIR}-latest
        mkdir $OUT_DIR
        gsutil -m cp -r gs://$GCLOUD_BUCKET/* $OUT_DIR

        PREVIOUS_VERSION_LINKS=$(head -n 1 $OUT_DIR/versions.html | sed -E 's~^.*<h3 id="archive">.*<tbody>(.*)</tbody>.*$~\1~')
        LATEST_CURRENT_VERSION=$(head -n 1 $OUT_DIR/versions.html | sed -E 's~^.*<tbody><tr><th>([^<]*).*<h3 id="rc">.*$~\1~')

        if [ "$LATEST_CURRENT_VERSION" != "$LATEST_VERSION" ]; then
          PREVIOUS_VERSION_LINKS="<tr><th>$LATEST_CURRENT_VERSION</th><td><a href="/docs/$LATEST_CURRENT_VERSION/introduction">Documentation</a></td><td><a href="https://github.com/devspace-cloud/devspace/releases/tag/$LATEST_CURRENT_VERSION">Release Notes</a></td></tr>$PREVIOUS_VERSION_LINKS"
        fi

        sed -Ei "s~^(.*<h3 id=\"archive\">.*<tbody>)(.*)(</tbody>.*)$~\1$PREVIOUS_VERSION_LINKS\3~" ${OUT_DIR}-latest/versions.html

        cp ${OUT_DIR}-latest/versions.html ${OUT_DIR}-latest/versions/index.html
        cp ${OUT_DIR}-latest/versions.html ${OUT_DIR}-latest/en/versions.html
        cp ${OUT_DIR}-latest/versions.html ${OUT_DIR}-latest/en/versions/index.html

        rm -r $OUT_DIR/docs/next
        cp -r ${OUT_DIR}-latest/* $OUT_DIR

        gsutil -m rsync -d -r $OUT_DIR gs://$GCLOUD_BUCKET/
      working-directory: ./docs/website
      env:
        GCLOUD_DOCS_SERVICE_ACCOUNT: ${{ secrets.GCLOUD_DOCS_SERVICE_ACCOUNT }}
        GCLOUD_PROJECT: "devspace-docs"
        GCLOUD_BUCKET: "docs-site"
    - name: Deploy production site on netlify
      run: |
        netlify deploy --auth=$NETLIFY_AUTH_TOKEN --site=$NETLIFY_SITE_ID --dir=$OUT_DIR --prod
      working-directory: ./docs/website
